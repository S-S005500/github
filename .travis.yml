language: c

cache: apt

sudo: false
dist: trusty

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

matrix:
  exclude:
    - os: linux
    - os: osx
  include:
    - os: linux
      compiler: gcc
    - os: osx
      compiler: clang

before_script:
  - export CFLAGS="-Wall -Wextra -Werror"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap PX4/homebrew-px4; fi
    # Remove oclint because it conflicts with gcc, which fftw requires
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall oclint; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install fftw gcc-arm-none-eabi dfu-util; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=/usr/local/bin:$PATH; fi
    # Linux containers don't have access to the latest gcc-arm-none-eabi package
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O gcc-arm-none-eabi.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/6-2017q2/gcc-arm-none-eabi-6-2017-q2-update-linux.tar.bz2; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar xf gcc-arm-none-eabi.tar.bz2; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$PATH:$PWD/gcc-arm-none-eabi-6-2017-q2-update/bin; fi
  # For virtualenv(?) reasons we can't apt-get install python-yaml
  - pip install PyYAML

script:
  - mkdir host/build
  - cd host/build
  - cmake ..
  - make
  - cd ../..
  - mkdir firmware/build-hackrf-one
  - mkdir firmware/build-jawbreaker
  - mkdir firmware/build-rad1o
  - cd firmware/libopencm3
  - make
  - cd ../build-hackrf-one
  - cmake ..
  - make
  - cd ../build-jawbreaker
  - cmake -DBOARD=JAWBREAKER ..
  - make
  - cd ../build-rad1o
  - cmake -DBOARD=RAD1O ..
  - make

addons:
  apt:
    packages:
      - libusb-1.0-0-dev
      - libfftw3-dev
      - dfu-util
